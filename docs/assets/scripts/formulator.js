!function(t,r){"object"==typeof exports&&"object"==typeof module?module.exports=r():"function"==typeof define&&define.amd?define("Formulator",[],r):"object"==typeof exports?exports.Formulator=r():t.Formulator=r()}(self,(function(){return(()=>{"use strict";var t={317:(t,r,e)=>{e.d(r,{Z:()=>o});var n=e(81),s=e.n(n),a=e(645),i=e.n(a)()(s());i.push([t.id,"@import url(https://fonts.googleapis.com/css2?family=Noto+Sans+Math&display=swap);"]),i.push([t.id,'.__formulator_formula_container {\r\n    font-family: \'Noto Sans Math\', sans-serif;\r\n    font-size: 21px;\r\n}\r\n.__formulator_formula_container_wrapper {\r\n    overflow: auto;\r\n}\r\n.__formulator_formula_container_wrapper, .__formulator_formula_container, .__formulator_formulaPart,\r\n.__formulator_topIndex, .__formulator_divisionContainer, .__formulator_bracket, .__formulator_rootContainer, \r\n.__formulator_rootExpressionContainer, .__formulator_rootExpression, .__formulator_rootWrapper, .__formulator_bottomIndex,\r\n.__formulator_systemItemsContainer, .__formulator_indefIntegralCotnainer, .__formulator_limtitSymbolContainer,\r\n.__formulator_limtitSymbolParameters, .__formulator_limtitContainer, .__formulator_sumContainer {\r\n    display: flex;\r\n}\r\n\r\n.__formulator_rootWrapper {\r\n    align-items: flex-end;\r\n}\r\n\r\n.__formulator_rootContainer {\r\n    margin-top: 3px;\r\n    min-height: 40px;\r\n}\r\n\r\n.__formulator_bracket {\r\n    align-items: center;\r\n}\r\n\r\n.__formulator_bracket svg {\r\n    height: 100%;\r\n    width: auto;\r\n}\r\n\r\n.__formulator_formula_container, .__formulator_formulaPart, .__formulator_topIndex {\r\n    gap: 5px\r\n}\r\n\r\n.__formulator_formula_container_wrapper{\r\n    width: 100%;\r\n    height: 100%;\r\n    min-height: 300px;\r\n    min-width: 300px;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n\r\n.__formulator_formula_container, .__formulator_formulaPart {\r\n    align-items: center;\r\n}\r\n\r\n.__formulator_formulaPart {\r\n    justify-content: center;\r\n}\r\n\r\n.__formulator_divisionDelimtier {\r\n    width: 100%;\r\n    height: 1px;\r\n    background: #000;\r\n}\r\n\r\n.__formulator_divisionContainer {\r\n    flex-direction: column;\r\n    justify-content: center;\r\n}\r\n\r\n.__formulator_divisionContainer .__formulator_divisionContainer {\r\n    font-size: 16px;\r\n}\r\n\r\n.__formulator_topIndex {\r\n    position: relative;\r\n    align-items: flex-start;\r\n    font-size: 14px;\r\n}\r\n\r\n.__formulator_topIndex .__formulator_divisionContainer {\r\n    transform: scale(.85);\r\n    position: relative;\r\n}\r\n\r\n.__formulator_rootExpressionContainer {\r\n    flex-direction: column;\r\n}\r\n\r\n.__formulator_rootExpression {\r\n    margin: 0 8px;\r\n    height: 100%;\r\n}\r\n\r\n.__formulator_rootLine {\r\n    width: 100%;\r\n    height: 1px;\r\n    background-color: #000;\r\n    position: relative;\r\n}\r\n\r\n.__formulator_rootSymbolContainer {\r\n    min-width: 25px;\r\n    height: auto;\r\n    position: relative;\r\n}\r\n\r\n.__formulator_rootSymbolBase {\r\n    width: 1px;\r\n    height: 100%;\r\n    background: #000;\r\n    position: absolute;\r\n    transform: skew(-10deg);\r\n    transform-origin: right top;\r\n    right: 0;\r\n}\r\n\r\n.__formulator_rootSymbolBase::before {\r\n    content: " ";\r\n    display: block;\r\n    width: 1px;\r\n    height: 20px;\r\n    background: #000;\r\n    transform: skew(30deg);\r\n    transform-origin: left bottom;\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n}\r\n\r\n.__formulator_rootSymbolBase::after {\r\n    content: "";\r\n    display: block;\r\n    position: absolute;\r\n    height: 1px;\r\n    width: 10px;\r\n    background-color: #000;\r\n    bottom: 20px;\r\n    left: -21px;\r\n}\r\n\r\n.__formulator_rootPowerContainer {\r\n    box-sizing: border-box;\r\n    position: relative;\r\n    display: flex;\r\n    padding-bottom: 5px;\r\n}\r\n\r\n.__formulator_rootPowerContainer::before {\r\n    content: "";\r\n    display: block;\r\n    position: absolute;\r\n    height: 1px;\r\n    width: 100%;\r\n    background-color: #000;\r\n    bottom: 20px;\r\n}\r\n\r\n.__formulator_rootPower {\r\n    display: flex;\r\n    transform: scale(0.7);\r\n    padding-bottom: 15px;\r\n    box-sizing: border-box;\r\n}\r\n\r\n.__formulator_rootPowerLine {\r\n    position: absolute;\r\n    right: -2px;\r\n    bottom: 20px;\r\n    width: 100%;\r\n    height: 1px;\r\n    background: #000;\r\n}\r\n\r\n.__formulator_bottomIndex{\r\n    font-size: 14px;\r\n    position: relative;\r\n    top: 10px;\r\n}\r\n\r\n.__formulator_systemSymbolContainer{\r\n    width: 20px;\r\n    height: 100%;\r\n}\r\n\r\n.__formulator_systemSymbolContainer svg {\r\n    height: 100%;\r\n}\r\n\r\n.__formulator_systemItemsContainer {\r\n    flex-direction: column;\r\n    padding-left: 15px;\r\n    gap: 4px;\r\n}\r\n\r\n.__formulator_systemContainer {\r\n    display: grid;\r\n    grid-template-columns: 0.1fr 1fr;\r\n}\r\n\r\n.__formulator_indefIntegralCotnainer{\r\n    align-items: center;\r\n}\r\n\r\n.__formulator_integralSymbol svg {\r\n    height: 65px;\r\n}\r\n\r\n.__formulator_defIntegralSymbolContainer .__formulator_formulaPart {\r\n    font-size: 14px;\r\n}\r\n\r\n.__formulator_limtitSymbolContainer {\r\n    flex-direction: column;\r\n    margin-right: 10px;\r\n}\r\n\r\n.__formulator_limtitSymbolParameters {\r\n    font-size: 14px;\r\n}\r\n\r\n.__formulator_limtitContainer {\r\n    align-items: center;\r\n}\r\n\r\n.__formulator_sumSymbolContainer {\r\n    margin-right: 10px;\r\n}\r\n\r\n.__formulator_sumSymbolContainer > .__formulator_formulaPart {\r\n    font-size: 14px;\r\n}\r\n\r\n.__formulator_vecContainer {\r\n    position: relative;\r\n    padding-top: 4px;\r\n}\r\n\r\n.__formulator_vecArrow {\r\n    width: 100%;\r\n    position: relative;\r\n    background-color: #000;\r\n    height: 1px;\r\n    top: 3px;\r\n}\r\n\r\n.__formulator_vecArrow::after, .__formulator_vecArrow::before {\r\n    content: "";\r\n    display: block;\r\n    width: 6px;\r\n    height: 1px;\r\n    right: 0;\r\n    position: absolute;\r\n    top: 0;\r\n    background-color: #000;\r\n    transform-origin: right center; \r\n}\r\n\r\n.__formulator_vecArrow::after {\r\n    transform: rotate(-30deg);\r\n}\r\n\r\n.__formulator_vecArrow::before {\r\n    transform: rotate(30deg);\r\n}\r\n',""]);const o=i},645:t=>{t.exports=function(t){var r=[];return r.toString=function(){return this.map((function(r){var e="",n=void 0!==r[5];return r[4]&&(e+="@supports (".concat(r[4],") {")),r[2]&&(e+="@media ".concat(r[2]," {")),n&&(e+="@layer".concat(r[5].length>0?" ".concat(r[5]):""," {")),e+=t(r),n&&(e+="}"),r[2]&&(e+="}"),r[4]&&(e+="}"),e})).join("")},r.i=function(t,e,n,s,a){"string"==typeof t&&(t=[[null,t,void 0]]);var i={};if(n)for(var o=0;o<this.length;o++){var u=this[o][0];null!=u&&(i[u]=!0)}for(var l=0;l<t.length;l++){var c=[].concat(t[l]);n&&i[c[0]]||(void 0!==a&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=a),e&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=e):c[2]=e),s&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=s):c[4]="".concat(s)),r.push(c))}},r}},81:t=>{t.exports=function(t){return t[1]}},379:t=>{var r=[];function e(t){for(var e=-1,n=0;n<r.length;n++)if(r[n].identifier===t){e=n;break}return e}function n(t,n){for(var a={},i=[],o=0;o<t.length;o++){var u=t[o],l=n.base?u[0]+n.base:u[0],c=a[l]||0,d="".concat(l," ").concat(c);a[l]=c+1;var _=e(d),m={css:u[1],media:u[2],sourceMap:u[3],supports:u[4],layer:u[5]};if(-1!==_)r[_].references++,r[_].updater(m);else{var p=s(m,n);n.byIndex=o,r.splice(o,0,{identifier:d,updater:p,references:1})}i.push(d)}return i}function s(t,r){var e=r.domAPI(r);return e.update(t),function(r){if(r){if(r.css===t.css&&r.media===t.media&&r.sourceMap===t.sourceMap&&r.supports===t.supports&&r.layer===t.layer)return;e.update(t=r)}else e.remove()}}t.exports=function(t,s){var a=n(t=t||[],s=s||{});return function(t){t=t||[];for(var i=0;i<a.length;i++){var o=e(a[i]);r[o].references--}for(var u=n(t,s),l=0;l<a.length;l++){var c=e(a[l]);0===r[c].references&&(r[c].updater(),r.splice(c,1))}a=u}}},569:t=>{var r={};t.exports=function(t,e){var n=function(t){if(void 0===r[t]){var e=document.querySelector(t);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(t){e=null}r[t]=e}return r[t]}(t);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");n.appendChild(e)}},216:t=>{t.exports=function(t){var r=document.createElement("style");return t.setAttributes(r,t.attributes),t.insert(r,t.options),r}},565:(t,r,e)=>{t.exports=function(t){var r=e.nc;r&&t.setAttribute("nonce",r)}},795:t=>{t.exports=function(t){var r=t.insertStyleElement(t);return{update:function(e){!function(t,r,e){var n="";e.supports&&(n+="@supports (".concat(e.supports,") {")),e.media&&(n+="@media ".concat(e.media," {"));var s=void 0!==e.layer;s&&(n+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),n+=e.css,s&&(n+="}"),e.media&&(n+="}"),e.supports&&(n+="}");var a=e.sourceMap;a&&"undefined"!=typeof btoa&&(n+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),r.styleTagTransform(n,t,r.options)}(r,t,e)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(r)}}}},589:t=>{t.exports=function(t,r){if(r.styleSheet)r.styleSheet.cssText=t;else{for(;r.firstChild;)r.removeChild(r.firstChild);r.appendChild(document.createTextNode(t))}}}},r={};function e(n){var s=r[n];if(void 0!==s)return s.exports;var a=r[n]={id:n,exports:{}};return t[n](a,a.exports,e),a.exports}e.n=t=>{var r=t&&t.__esModule?()=>t.default:()=>t;return e.d(r,{a:r}),r},e.d=(t,r)=>{for(var n in r)e.o(r,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:r[n]})},e.o=(t,r)=>Object.prototype.hasOwnProperty.call(t,r);var n={};return(()=>{e.d(n,{default:()=>G});class t{constructor(t,r,e){this._type=t,this._value=r,this._arity=e}get type(){return this._type}get value(){return this._value}get arity(){return this._arity}}var r;!function(t){t[t.BINARY_OPERATOR=0]="BINARY_OPERATOR",t[t.UNARY_OPERATOR=1]="UNARY_OPERATOR",t[t.LEFT_BRACKET=2]="LEFT_BRACKET",t[t.RIGHT_BRACKET=3]="RIGHT_BRACKET",t[t.REGULAR_STRING=4]="REGULAR_STRING",t[t.COMA_SEPARATOR=5]="COMA_SEPARATOR",t[t.FUNCTION=6]="FUNCTION",t[t.EOF=7]="EOF"}(r||(r={}));const s={"+":{type:r.REGULAR_STRING,arity:0},"-":{type:r.REGULAR_STRING,arity:0},"*":{type:r.REGULAR_STRING,arity:0},"=":{type:r.REGULAR_STRING,arity:0},">":{type:r.REGULAR_STRING,arity:0},"<":{type:r.REGULAR_STRING,arity:0},"/":{type:r.BINARY_OPERATOR,arity:2},"^":{type:r.UNARY_OPERATOR,arity:1},_:{type:r.UNARY_OPERATOR,arity:1},"(":{type:r.LEFT_BRACKET,arity:0},")":{type:r.RIGHT_BRACKET,arity:0},"|":{type:r.REGULAR_STRING,arity:0},",":{type:r.COMA_SEPARATOR,arity:0}};function a(t,r){return t[r]}function i(t,r){return t.className.split(" ").indexOf(r)>=0||t.parentNode&&i(t.parentNode,r)}class o{constructor(){this.lexemeList=[],this.subExpressionStatus={start:-1,end:-1}}add(t){this.lexemeList.push(t)}unshift(t){this.lexemeList.unshift(t)}getLexemeList(){return this.lexemeList}get(t){if(t>=0&&t<this.lexemeList.length)return this.lexemeList[t]}length(){return this.lexemeList.length}setSubexpression(t,r){this.subExpressionStart=t,this.subExpressionEnd=r}set subExpressionStart(t){this.subExpressionStatus.start=t}set subExpressionEnd(t){this.subExpressionStatus.end=t}get subExpressionStart(){return this.subExpressionStatus.start}get subExpressionEnd(){return this.subExpressionStatus.end}}const u={Root:{argCount:2},Log:{argCount:2},System2:{argCount:2},System3:{argCount:3},System4:{argCount:4},IndefInt:{argCount:1},DefInt:{argCount:3},IntLine:{argCount:3},Lim:{argCount:3},Indexes:{argCount:2},Sum:{argCount:3},Vec:{argCount:1}};class l{constructor(){this.analysisPosition=0}analyze(e){const n=new o;for(this.resetPosition();this.analysisPosition<e.length;){const t=e[this.analysisPosition];if(this.isItWhitespace(t))this.movePositionForward();else if(this.charIsOperator(t))n.add(this.createOperatorLexeme(t)),this.movePositionForward();else{const t=this.readStringLexeme(e);n.add(t)}}return n.add(new t(r.EOF," ",0)),n}charIsOperator(t){return t in s}createOperatorLexeme(r){const e=a(s,r);return new t(e.type,r,e.arity)}createStaticExpressionLexeme(e){return new t(r.REGULAR_STRING,e,0)}createFunctionLexeme(e){const n=a(u,e);return new t(r.FUNCTION,e,n.argCount)}readStringLexeme(t){let r,e="",n="";for(;;)if(n=t[this.analysisPosition],this.movePositionForward(),!this.isItWhitespace(n)){if(this.charIsOperator(n)||this.analysisPosition>t.length)break;e+=n}return r=e in u?this.createFunctionLexeme(e):this.createStaticExpressionLexeme(e),this.movePositionBack(),r}isItWhitespace(t){return" "==t||""==t||"    "==t||"\n"==t}movePositionForward(){this.analysisPosition++}movePositionBack(){this.analysisPosition--}resetPosition(){this.analysisPosition=0}}class c{constructor(t,r){this._value=t,this._type=r}get value(){return this._value}get type(){return this._type}get arity(){return this._arity}}class d extends c{constructor(t){super(t,r.REGULAR_STRING),this._arity=0}}class _ extends c{constructor(t,r,e){super(t,r),this._arity=1,e&&(this.operand=e)}set operand(t){this._operand=t}get operand(){return this._operand}}class m extends c{constructor(t,r,e,n){super(t,r),this._arity=2,e&&n&&(this.leftHandSideOperand=e,this.rightHandSideOperand=n)}get leftHandSideOperand(){return this._leftHandSideOperand}get rightHandSideOperand(){return this._rightHandSideOperand}set leftHandSideOperand(t){this._leftHandSideOperand=t}set rightHandSideOperand(t){this._rightHandSideOperand=t}}class p{isNotOperand(t,r){return this.lexemeList=t,this.lexemeIndex=r,this.isNotLHSOperand()&&this.isNotRHSOperand()}isNotLHSOperand(){return!this.isItNotLastLexeme()||this.nextNotBinaryOperator()||this.nextIsFucntion()}isNotRHSOperand(){return!this.isItNotFirstLexeme()||this.prevNotBinaryOperator()&&this.prevNotUnaryOperator()||this.prevIsFunction()}getNextLexeme(){return this.lexemeList.get(this.lexemeIndex+1)}getPrevLexeme(){return this.lexemeList.get(this.lexemeIndex-1)}isItNotLastLexeme(){return this.lexemeIndex+1<this.lexemeList.length()}isItNotFirstLexeme(){return this.lexemeIndex-1>=0}nextNotBinaryOperator(){return 2!=this.getNextLexeme().arity}prevNotUnaryOperator(){return 1!=this.getPrevLexeme().arity}prevNotBinaryOperator(){return 2!=this.getPrevLexeme().arity}nextIsFucntion(){return this.getNextLexeme().type==r.FUNCTION}prevIsFunction(){return this.getPrevLexeme().type==r.FUNCTION}}class h{constructor(){this.nodes=[]}add(t){this.nodes.push(t)}get(t){if(t>=0&&t<this.nodes.length)return this.nodes[t]}toArray(){return this.nodes}}class f{traceBracketsExpression(t,e,n){let s=e;return n==r.LEFT_BRACKET?this.traceForward(t,1,s):n==r.RIGHT_BRACKET?this.traceBackward(t,1,s):void 0}traceForward(t,e,n){for(;0!=e&&n<t.length()-1;)n++,t.get(n).type==r.LEFT_BRACKET&&e++,t.get(n).type==r.RIGHT_BRACKET&&e--;return 0==e&&n}traceBackward(t,e,n){for(;0!=e&&n>0;)n--,t.get(n).type==r.RIGHT_BRACKET&&e++,t.get(n).type==r.LEFT_BRACKET&&e--;return 0==e&&n}}class g{static mismatch(){throw new Error("Brackets mismatch.")}}class x{constructor(t){this.bracketTracer=t,this.subexpression=new o,this.isItFucntion=!1}getSubexpression(e,n,s){this.lexemeList=n,this.currentLexemeIndex=s,this.currentLexeme=e;const a=new t(r.EOF," ",0);return this.handleFunctionNameCase(),this.isItBracketsExpression()?this.handleBracektsExpression():this.handleRegularStringLexeme(),this.isItFucntion&&this.wrapExpressionAsFunction(),this.subexpression.add(a),this.subexpression}copyExpression(t){this.currentLexeme.type==r.LEFT_BRACKET&&this.moveForward(t),this.currentLexeme.type==r.RIGHT_BRACKET&&this.moveBackward(t)}moveForward(t){for(let r=this.currentLexemeIndex+1;r<t;r++)this.subexpression.add(this.lexemeList.get(r))}moveBackward(t){let r=this.currentLexemeIndex-1;for(;r>t;r--)this.subexpression.unshift(this.lexemeList.get(r));this.handleFuncionArgumentList(r)}handleFunctionNameCase(){this.currentLexeme.type==r.FUNCTION&&(this.functionNameLexeme=this.lexemeList.get(this.currentLexemeIndex),this.isItFucntion=!0,this.currentLexemeIndex+=1,this.currentLexeme=this.lexemeList.get(this.currentLexemeIndex))}handleFuncionArgumentList(t){t>0&&this.lexemeList.get(t-1).type==r.FUNCTION&&(this.isItFucntion=!0,this.functionNameLexeme=this.lexemeList.get(t-1))}wrapExpressionAsFunction(){const e=new t(r.LEFT_BRACKET,"(",0),n=new t(r.RIGHT_BRACKET,")",0);this.subexpression.add(n),this.subexpression.unshift(e),this.subexpression.unshift(this.functionNameLexeme)}isItBracketsExpression(){return this.currentLexeme.type==r.LEFT_BRACKET||this.currentLexeme.type==r.RIGHT_BRACKET}handleBracektsExpression(){const t=this.bracketTracer.traceBracketsExpression(this.lexemeList,this.currentLexemeIndex,this.currentLexeme.type);!1!==t?this.copyExpression(t):g.mismatch()}handleRegularStringLexeme(){this.subexpression.add(this.currentLexeme)}}class v{constructor(t,r){this.bracketTracer=r,this.operandDetector=t}isSubexpressionOperand(t,r,e){return!1===e&&g.mismatch(),!this.operandDetector.isNotOperand(t,r)||!this.operandDetector.isNotOperand(t,e)}getSubexpression(t,r,e){return new x(this.bracketTracer).getSubexpression(t,r,e)}}class y extends c{constructor(t,r,e,n){super(t,r),this._arity=e,n&&(this.arguments=n)}set arguments(t){this._arguments=t}get argumentsList(){return this._arguments}}class k{static argumentListMissing(t){throw new Error(`Function missing argument list. Details: ${t}`)}}class b{constructor(){this.operandDetector=new p,this.bracketTracer=new f,this.subexpressionHandler=new v(this.operandDetector,this.bracketTracer)}analyze(t){return this.nodeList=new h,this.lexemeList=t,this.lexemeList.length()>0&&(this.nodeList=this.parse(this.lexemeList)),this.nodeList}parse(t,e=0,n=new h){if(!(e>=t.subExpressionStart&&e<=t.subExpressionEnd)){let s=t.get(e);if(s.type==r.EOF)return n;const a=this.parseLexeme(s,t,e);a&&n.add(a)}return e++,this.parse(t,e,n)}parseLexeme(t,e,n){if(t.type==r.REGULAR_STRING&&this.operandDetector.isNotOperand(e,n))return this.createStringNode(t);const s=this.getLexemeParsingFunction(t,e,n);return s?s():void 0}getLexemeParsingFunction(t,e,n){const s={};return s[r.BINARY_OPERATOR]=()=>this.handleBinaryOperator(t,e,n),s[r.UNARY_OPERATOR]=()=>this.handleUnaryOperator(t,e,n),s[r.LEFT_BRACKET]=()=>this.handleBracketExpression(t,e,n)||void 0,s[r.RIGHT_BRACKET]=s[r.LEFT_BRACKET],s[r.FUNCTION]=()=>this.handleFunctionExpression(t,e,n)||void 0,s[t.type]}createStringNode(t){return new d(t.value)}handleBinaryOperator(t,r,e){const n=e-1,s=e+1,a=r.get(n),i=this.parse(this.subexpressionHandler.getSubexpression(a,r,n)),o=r.get(s),u=this.parse(this.subexpressionHandler.getSubexpression(o,r,s));return new m(t.value,t.type,i,u)}handleUnaryOperator(t,r,e){const n=e+1,s=r.get(n),a=this.parse(this.subexpressionHandler.getSubexpression(s,r,n));return new _(t.value,t.type,a)}handleFunctionExpression(t,e,n){const s=n+1;s>=e.length()&&k.argumentListMissing(t);const a=e.get(s).type;a!=r.LEFT_BRACKET&&k.argumentListMissing(t);const i=this.bracketTracer.traceBracketsExpression(e,s,a);if(this.operandDetector.isNotOperand(e,n)&&this.operandDetector.isNotOperand(e,i))return e.setSubexpression(n,i),this.createFunctionNode(t,e,n,i);e.setSubexpression(n-1,i)}createFunctionNode(t,r,e,n){const s=t.arity;let a=[],i=e+2;for(let t=0;t<s;t++){const t=r.get(i),e=this.subexpressionHandler.getSubexpression(t,r,i);a.push(this.parse(e)),i+=e.length(),e.length()>2&&(i+=2)}return new y(t.value,t.type,t.arity,a)}handleBracketExpression(t,r,e){const n=t.type,s=this.bracketTracer.traceBracketsExpression(r,e,n);if(!this.subexpressionHandler.isSubexpressionOperand(r,e,s))return this.createStringNode(r.get(e));r.setSubexpression(e,s)}}class L{static regularStringNodeMarkup(t){return`<div class='__formulator_formulaPart'>${t}</div>`}static topIndexNodeMarkup(t){return`\n            <div class='__formulator_topIndex'>\n                ${t}\n            </div>\n        `}static leftBracketMarkup(){return'\n            <div class=\'__formulator_bracket __formulator_leftBracket\'>\n                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 4.692 22.514">\n                    <path id="Path_44" data-name="Path 44" d="M1413.875,8588.838s-3.771,5.072-3.771,10.559,3.771,11.388,3.771,11.388" transform="translate(-1409.604 -8588.54)" fill="none" stroke="#000" stroke-width="1"/>\n                </svg>          \n            </div>'}static rightBracketMarkup(){return'\n            <div class=\'__formulator_bracket __formulator_rightBracket\'>\n                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 4.692 22.514">\n                    <path id="Path_44" data-name="Path 44" d="M1410.1,8588.838s3.771,5.072,3.771,10.559-3.771,11.388-3.771,11.388" transform="translate(-1409.683 -8588.54)" fill="none" stroke="#000" stroke-width="1"/>\n                </svg>          \n            </div>'}static divisionMarkup(t,r){return`\n            <div class = '__formulator_divisionContainer'>\n                <div class = '__formulator_formulaPart'> ${t} </div>\n                <div class = '__formulator_divisionDelimtier'></div>\n                <div class = '__formulator_formulaPart'> ${r} </div>\n            </div>\n        `}static rootMarkup(t,r){return`\n            <div class = '__formulator_rootWrapper'>\n                <div class = '__formulator_rootPowerContainer'>\n                    <div class = '__formulator_rootPower'>${"<div class='__formulator_formulaPart'>2</div>"!=r?r:""}</div>\n                </div>\n                <div class = '__formulator_rootContainer'>\n                    <div class = '__formulator_rootSymbolContainer'>\n                        <div class = '__formulator_rootSymbolBase'></div>\n                    </div>\n                    <div class = '__formulator_rootExpressionContainer'>\n                        <div class = '__formulator_rootLine'></div>\n                        <div class = '__formulator_rootExpression'>${t}</div>\n                    </div>\n                </div>\n            </div>\n        `}static logMarkup(t,r){return`\n            <div class = '__formulator_formulaPart'> log <div class='__formulator_bottomIndex'>${r}</div> </div>\n            ${t}\n        `}static systemMarkup(t,r,e,n){return`\n            <div class='__formulator_systemContainer'> \n                <div class='__formulator_systemSymbolContainer'>\n                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 46.194 172.313">\n                        <g id="Group_33" data-name="Group 33" transform="translate(-4113.432 -6453.552)">\n                        <path id="Path_61" data-name="Path 61" d="M4113.615,6538.416c7.166-2.816,15.514-10.146,19.083-27.735,7.138-35.178-2.294-56.591,26.894-58.63" transform="translate(0 2)" fill="none" stroke="#000" stroke-width="2"/>\n                        <path id="Path_62" data-name="Path 62" d="M4113.615,6455c7.166,2.816,15.514,9.146,19.083,26.735,7.138,35.178-2.294,56.591,26.894,58.63" transform="translate(0 85)" fill="none" stroke="#000" stroke-width="2"/>\n                        </g>\n                    </svg>\n                </div>\n                <div class='__formulator_systemItemsContainer'>\n                    <div class = '__formulator_formulaPart'>${t}</div>\n                    <div class = '__formulator_formulaPart'>${r}</div>\n                    <div class = '__formulator_formulaPart'>${e||""}</div>\n                    <div class = '__formulator_formulaPart'>${n||""}</div>\n                </div>\n            </div>\n        `}static indefIntMarkup(t){return`\n            <div class='__formulator_indefIntegralCotnainer'>\n                <div class='__formulator_integralSymbol'>\n                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 5.721 22.813">\n                        <g id="Group_30" data-name="Group 30" transform="translate(-3414.453 -6955.837)">\n                        <path id="Path_41" data-name="Path 41" d="M3414.794,7071.669s2.562,2.391,2.519-2.667,0-7.674,0-7.674" transform="translate(0 -94.084)" fill="none" stroke="#000" stroke-width="0.7"/>\n                        <path id="Path_42" data-name="Path 42" d="M3417.313,7061.892s-2.562-2.391-2.519,2.668,0,7.674,0,7.674" transform="translate(2.52 -104.99)" fill="none" stroke="#000" stroke-width="0.7"/>\n                        </g>\n                    </svg>                \n                </div>\n                <div class='__formulator_formulaPart'>${t}</div>\n            </div>\n        `}static defIntMarkup(t,r,e){return`\n            <div class='__formulator_indefIntegralCotnainer'>\n                <div class='__formulator_defIntegralSymbolContainer'>\n                    <div class = '__formulator_formulaPart'>${e}</div>\n                    <div class='__formulator_integralSymbol'>\n                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 5.721 22.813">\n                            <g id="Group_30" data-name="Group 30" transform="translate(-3414.453 -6955.837)">\n                            <path id="Path_41" data-name="Path 41" d="M3414.794,7071.669s2.562,2.391,2.519-2.667,0-7.674,0-7.674" transform="translate(0 -94.084)" fill="none" stroke="#000" stroke-width="0.7"/>\n                            <path id="Path_42" data-name="Path 42" d="M3417.313,7061.892s-2.562-2.391-2.519,2.668,0,7.674,0,7.674" transform="translate(2.52 -104.99)" fill="none" stroke="#000" stroke-width="0.7"/>\n                            </g>\n                        </svg>                         \n                    </div>\n                    <div class = '__formulator_formulaPart'>${r}</div>\n                </div>\n                <div class='__formulator_formulaPart'>${t}</div>\n            </div>\n        `}static intLineMarkup(t,r){return`\n            <div class='__formulator_indefIntegralCotnainer'>\n                <div class='__formulator_defIntegralSymbolContainer'>\n                    <div class = '__formulator_formulaPart'>${r}</div>\n                    <div class='__formulator_integralSymbol'>\n                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1 22">\n                            <line id="Line_66" data-name="Line 66" y2="22" transform="translate(0.5)" fill="none" stroke="#000" stroke-width="0.5"/>\n                        </svg>                                         \n                    </div>\n                    <div class = '__formulator_formulaPart'>${t}</div>\n                </div>\n            </div>\n        `}static limitMarkup(t,r,e){return`\n            <div class='__formulator_limtitContainer'>\n                <div class='__formulator_limtitSymbolContainer'>\n                    <div style='text-align:center'>lim</div>\n                    <div class = '__formulator_limtitSymbolParameters'>\n                        <div class='__formulator_formulaPart'>\n                            ${r}\n                            <div>→</div>\n                            ${e}\n                        </div>\n                    </div>\n                </div>\n                <div class='__formulator_formulaPart'>\n                    ${t}\n                </div>\n            </div>\n        `}static bottomIndexNodeMarkup(t){return`\n            <div class='__formulator_bottomIndex'>${t}</div>\n        `}static twoIndexMarkup(t,r){return`\n            <div class='__formulator_indexesContainer'>\n                ${L.topIndexNodeMarkup(t)}\n                ${L.bottomIndexNodeMarkup(r)}\n            </div>\n        `}static sumMarkup(t,r,e){return`\n            <div class='__formulator_sumContainer'>\n                <div class = '__formulator_sumSymbolContainer'>\n                    <div class='__formulator_formulaPart'>${r}</div>\n                    <div>\n                        <svg xmlns="http://www.w3.org/2000/svg" width="30" height="39" viewBox="0 0 17 22">\n                            <path id="Path_43" data-name="Path 43" d="M24,5H7V7.414L15.586,16,7,24.586V27H24V25H9.414l9-9-9-9H24Z" transform="translate(-7 -5)"/>\n                        </svg>\n                    </div>\n                    <div class='__formulator_formulaPart'>${e}</div>\n                </div>\n                <div class='__formulator_formulaPart'>${t}</div>\n            </div>\n        `}static vecMarkup(t){return`\n            <div class='__formulator_vecContainer'>\n                <div class='__formulator_vecArrow'></div>\n                <div class='__formulator_formulaPart'>${t}</div>\n            </div>\n        `}}var w=e(379),S=e.n(w),E=e(795),I=e.n(E),M=e(569),R=e.n(M),C=e(565),N=e.n(C),T=e(216),P=e.n(T),A=e(589),O=e.n(A),B=e(317),F={};F.styleTagTransform=O(),F.setAttributes=N(),F.insert=R().bind(null,"head"),F.domAPI=I(),F.insertStyleElement=P(),S()(B.Z,F),B.Z&&B.Z.locals&&B.Z.locals;class H{constructor(t){this.setOutput(t)}setOutput(t){this.container=t}visualize(t){let r="\n            <div class='__formulator_formula_container_wrapper'>\n            <div class='__formulator_formula_container'>\n        ";r+=this.getMarkup(t),r+="</div></div>",this.container.innerHTML=r,this.adjustBracketsHeight(),this.adjustTopIndexes(),this.adjustDivisionExpressionPosition()}getMarkup(t){const r=t.toArray();let e="";return r.forEach((t=>{switch(t.value){case"^":const r=t;e+=L.topIndexNodeMarkup(this.getMarkup(r.operand));break;case"_":const n=t;e+=L.bottomIndexNodeMarkup(this.getMarkup(n.operand));break;case"-":e+=L.regularStringNodeMarkup("−");break;case"*":e+=L.regularStringNodeMarkup("⋅");break;case")":e+=L.rightBracketMarkup();break;case"(":e+=L.leftBracketMarkup();break;case"|":e+=L.regularStringNodeMarkup("│");break;case"/":const s=t;e+=L.divisionMarkup(this.getMarkup(s.leftHandSideOperand),this.getMarkup(s.rightHandSideOperand));break;case"Root":const a=t;e+=L.rootMarkup(this.getMarkup(a.argumentsList[0]),this.getMarkup(a.argumentsList[1]));break;case"Log":const i=t;e+=L.logMarkup(this.getMarkup(i.argumentsList[0]),this.getMarkup(i.argumentsList[1]));break;case"System2":const o=t;e+=L.systemMarkup(this.getMarkup(o.argumentsList[0]),this.getMarkup(o.argumentsList[1]));break;case"System3":const u=t;e+=L.systemMarkup(this.getMarkup(u.argumentsList[0]),this.getMarkup(u.argumentsList[1]),this.getMarkup(u.argumentsList[2]));break;case"System4":const l=t;e+=L.systemMarkup(this.getMarkup(l.argumentsList[0]),this.getMarkup(l.argumentsList[1]),this.getMarkup(l.argumentsList[2]),this.getMarkup(l.argumentsList[3]));break;case"IndefInt":const c=t;e+=L.indefIntMarkup(this.getMarkup(c.argumentsList[0]));break;case"DefInt":const d=t;e+=L.defIntMarkup(this.getMarkup(d.argumentsList[0]),this.getMarkup(d.argumentsList[1]),this.getMarkup(d.argumentsList[2]));break;case"IntLine":const _=t;e+=L.intLineMarkup(this.getMarkup(_.argumentsList[0]),this.getMarkup(_.argumentsList[1]));break;case"Lim":const m=t;e+=L.limitMarkup(this.getMarkup(m.argumentsList[0]),this.getMarkup(m.argumentsList[1]),this.getMarkup(m.argumentsList[2]));break;case"Indexes":const p=t;e+=L.twoIndexMarkup(this.getMarkup(p.argumentsList[0]),this.getMarkup(p.argumentsList[1]));break;case"Sum":const h=t;e+=L.sumMarkup(this.getMarkup(h.argumentsList[0]),this.getMarkup(h.argumentsList[1]),this.getMarkup(h.argumentsList[2]));break;case"Vec":const f=t;e+=L.vecMarkup(this.getMarkup(f.argumentsList[0]));break;case"ALPHA":e+=L.regularStringNodeMarkup("α");break;case"BETA":e+=L.regularStringNodeMarkup("β");break;case"GAMMA":e+=L.regularStringNodeMarkup("γ");break;case"DELTA":e+=L.regularStringNodeMarkup("Δ");break;case"DELTASM":e+=L.regularStringNodeMarkup("δ");break;case"PI":e+=L.regularStringNodeMarkup("π");break;case"PHI":e+=L.regularStringNodeMarkup("φ");break;case"f":e+=L.regularStringNodeMarkup("𝑓");break;case"DEG":e+=L.topIndexNodeMarkup(L.regularStringNodeMarkup("°"));break;default:e+=L.regularStringNodeMarkup(t.value)}})),e}adjustTopIndexes(){this.container.children[0].children[0].querySelectorAll(".__formulator_topIndex").forEach((t=>{t.children[0].classList.contains("__formulator_divisionContainer")?t.style.bottom=t.previousElementSibling.offsetHeight/1.8+"px":t.style.height=`${t.previousElementSibling.offsetHeight+t.offsetHeight}px`}))}adjustBracketsHeight(){this.container.children[0].children[0].querySelectorAll(".__formulator_leftBracket").forEach((t=>{t.style.height=`${t.nextElementSibling.clientHeight}px`})),this.justifyBracketsSizes()}justifyBracketsSizes(){const t=this.container.children[0].children[0].querySelectorAll(".__formulator_bracket");for(let r=0;r<t.length;r++)if(t[r].classList.contains("__formulator_leftBracket")){let e=1;for(let n=r+1;n<t.length;n++)if(t[n].classList.contains("__formulator_leftBracket")&&e++,t[n].classList.contains("__formulator_rightBracket")&&e--,0==e){t[n].style.height=`${t[r].clientHeight}px`;break}}}adjustDivisionExpressionPosition(){this.container.children[0].children[0].querySelectorAll(".__formulator_divisionContainer").forEach((t=>{const r=t.children;i(t,"__formulator_divisionContainer")||(r[0].clientHeight<r[2].clientHeight?r[0].style.paddingTop=r[2].clientHeight-r[0].clientHeight+"px":r[0].clientHeight>r[2].clientHeight&&(r[2].style.paddingBottom=r[0].clientHeight-r[2].clientHeight+"px"))}))}}const G=class{constructor(t){this.lexer=new l,this.parser=new b,this.visualizer=new H(t)}visualize(t){const r=this.lexer.analyze(t),e=this.parser.analyze(r);this.visualizer.visualize(e)}}})(),n.default})()}));